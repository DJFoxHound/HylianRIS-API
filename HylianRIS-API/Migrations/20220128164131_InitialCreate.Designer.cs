// <auto-generated />
using System;
using Hylian.RIS.API.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace HylianRIS_API.Migrations
{
    [DbContext(typeof(DbaseContext))]
    [Migration("20220128164131_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BreedClasses", b =>
                {
                    b.Property<Guid>("BreedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BreedID", "ClassID");

                    b.HasIndex("ClassID");

                    b.ToTable("BreedClasses");
                });

            modelBuilder.Entity("CompetitionTracks", b =>
                {
                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrackID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CompetitionID", "TrackID");

                    b.HasIndex("TrackID");

                    b.ToTable("CompetitionTracks");
                });

            modelBuilder.Entity("CompetitionTypes", b =>
                {
                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CompetitionID", "TypeID");

                    b.HasIndex("TypeID");

                    b.ToTable("CompetitionTypes");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Account", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.AccountRole", b =>
                {
                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganisationID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleID", "AccountID", "OrganisationID");

                    b.HasIndex("AccountID");

                    b.HasIndex("OrganisationID");

                    b.ToTable("AccountRoles", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Address", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Box")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Point>("Coordinates")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.AgeRestriction", b =>
                {
                    b.Property<Guid>("BreedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<bool>("TillEndOfYear")
                        .HasColumnType("bit");

                    b.HasKey("BreedId", "CompetitionID");

                    b.HasIndex("CompetitionID");

                    b.ToTable("AgeRestrictions", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Breed", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalSystemUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Names");

                    b.Property<string>("_PluralNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PluralNames");

                    b.HasKey("ID");

                    b.ToTable("Breeds", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Contact", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TypeID");

                    b.HasIndex("OrganisationID", "TypeID")
                        .IsUnique();

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.ContactType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ContactTypes", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Country", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Countries", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.CrewMember", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CrewTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventId", "PersonID", "CrewTypeID");

                    b.HasIndex("CrewTypeID");

                    b.HasIndex("PersonID");

                    b.ToTable("CrewMembers", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.CrewType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CrewTypes", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Distance", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsOfficial")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Names");

                    b.HasKey("ID");

                    b.HasIndex("Length")
                        .IsUnique();

                    b.ToTable("Distances", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Dog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BreedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chip")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pedigree")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RunnerType")
                        .HasColumnType("int");

                    b.Property<Guid>("SexId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BreedId");

                    b.HasIndex("CountryId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SexId");

                    b.ToTable("Dogs", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Jersey", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("_Codes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Codes");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Names");

                    b.HasKey("ID");

                    b.HasIndex("CompetitionID");

                    b.HasIndex("Number", "CompetitionID")
                        .IsUnique();

                    b.ToTable("Jerseys", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Translated")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Languages", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Organisation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.HasIndex("CompetitionID");

                    b.ToTable("Organisations", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Person", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AccountId");

                    b.HasIndex("CountryId");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Race", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BreedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DistanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNr")
                        .HasColumnType("int");

                    b.Property<Guid>("RaceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SexId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BreedId");

                    b.HasIndex("ClassId");

                    b.HasIndex("DistanceId");

                    b.HasIndex("EventId");

                    b.HasIndex("RaceTypeId");

                    b.HasIndex("SexId");

                    b.ToTable("Races", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceClass", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClassType")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MixedClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequiredAge")
                        .HasColumnType("int");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Names");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CompetitionID");

                    b.HasIndex("MixedClassID");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceCompetition", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsProfessional")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunnerTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Competitions", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceEvent", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOfficial")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrganisationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrackID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Names");

                    b.HasKey("ID");

                    b.HasIndex("CompetitionID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("TrackID");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceLicense", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetitionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DogID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RaceClassId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CompetitionID");

                    b.HasIndex("DogID");

                    b.HasIndex("RaceClassId");

                    b.ToTable("RaceLicenses", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceTrack", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Tracks", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsOfficial")
                        .HasColumnType("bit");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RaceTypes");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Run", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DogID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JerseyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RaceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResultTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("TimeTicks")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DogID");

                    b.HasIndex("JerseyID");

                    b.HasIndex("RaceID");

                    b.HasIndex("ResultTypeID");

                    b.ToTable("Runs", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RunResultType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("HasCustomOrder")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("RunResultTypes", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Sex", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("_Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Names");

                    b.Property<string>("_PluralNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PluralNames");

                    b.HasKey("ID");

                    b.ToTable("Sexes", (string)null);
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.TrackRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BreedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DistanceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DogName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPreSystem")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RunID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SexID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrackID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BreedID");

                    b.HasIndex("DistanceID");

                    b.HasIndex("RunID");

                    b.HasIndex("SexID");

                    b.HasIndex("TrackID");

                    b.ToTable("TrackRecords", (string)null);
                });

            modelBuilder.Entity("Participants", b =>
                {
                    b.Property<Guid>("DogID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DogID", "EventID");

                    b.HasIndex("EventID");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("TrackDistances", b =>
                {
                    b.Property<Guid>("DistanceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrackID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DistanceID", "TrackID");

                    b.HasIndex("TrackID");

                    b.ToTable("TrackDistances");
                });

            modelBuilder.Entity("TrackOrganisations", b =>
                {
                    b.Property<Guid>("OrganisationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrackID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganisationID", "TrackID");

                    b.HasIndex("TrackID");

                    b.ToTable("TrackOrganisations");
                });

            modelBuilder.Entity("BreedClasses", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Breed", null)
                        .WithMany()
                        .HasForeignKey("BreedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BreedClasses_Breeds_BreedID");

                    b.HasOne("Hylian.RIS.API.Domain.RaceClass", null)
                        .WithMany()
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BreedClasses_Classes_ClassID");
                });

            modelBuilder.Entity("CompetitionTracks", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", null)
                        .WithMany()
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CompetitionTracks_Competitions_CompetitionID");

                    b.HasOne("Hylian.RIS.API.Domain.RaceTrack", null)
                        .WithMany()
                        .HasForeignKey("TrackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CompetitionTracks_Tracks_TrackID");
                });

            modelBuilder.Entity("CompetitionTypes", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", null)
                        .WithMany()
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CompetitionTypes_Competitions_CompetitionID");

                    b.HasOne("Hylian.RIS.API.Domain.RaceType", null)
                        .WithMany()
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CompetitionTypes_Types_TypeID");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Account", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.AccountRole", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Account", "Account")
                        .WithMany("Roles")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Organisation", "Organisation")
                        .WithMany("Roles")
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Organisation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Address", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.AgeRestriction", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Breed", "Breed")
                        .WithMany("AgeRestrictions")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", "Competition")
                        .WithMany("AgeRestrictions")
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Contact", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Organisation", "Organisation")
                        .WithMany("Contacts")
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.ContactType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.CrewMember", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.CrewType", "CrewType")
                        .WithMany()
                        .HasForeignKey("CrewTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceEvent", "Event")
                        .WithMany("Crew")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrewType");

                    b.Navigation("Event");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Dog", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Breed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Person", "Owner")
                        .WithMany("Dogs")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed");

                    b.Navigation("Country");

                    b.Navigation("Owner");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Jersey", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", "Competition")
                        .WithMany("Jerseys")
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Organisation", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", "Competition")
                        .WithMany()
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Person", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Account", "Account")
                        .WithMany("Persons")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Race", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Breed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Distance", "Distance")
                        .WithMany()
                        .HasForeignKey("DistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceEvent", "Event")
                        .WithMany("Races")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceType", "RaceType")
                        .WithMany()
                        .HasForeignKey("RaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed");

                    b.Navigation("Class");

                    b.Navigation("Distance");

                    b.Navigation("Event");

                    b.Navigation("RaceType");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceClass", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", "Competition")
                        .WithMany()
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceClass", "MixedClass")
                        .WithMany()
                        .HasForeignKey("MixedClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("MixedClass");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceEvent", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", "Competition")
                        .WithMany("Events")
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Organisation", "Organisation")
                        .WithMany("Events")
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceTrack", "Track")
                        .WithMany("Events")
                        .HasForeignKey("TrackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("Organisation");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceLicense", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.RaceCompetition", "Competition")
                        .WithMany("Licenses")
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Dog", "Dog")
                        .WithMany("Licenses")
                        .HasForeignKey("DogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceClass", "RaceClass")
                        .WithMany("Licenses")
                        .HasForeignKey("RaceClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("Dog");

                    b.Navigation("RaceClass");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceTrack", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Run", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Dog", "Dog")
                        .WithMany("Runs")
                        .HasForeignKey("DogID");

                    b.HasOne("Hylian.RIS.API.Domain.Jersey", "Jersey")
                        .WithMany()
                        .HasForeignKey("JerseyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Race", "Race")
                        .WithMany("Runs")
                        .HasForeignKey("RaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RunResultType", "ResultType")
                        .WithMany()
                        .HasForeignKey("ResultTypeID");

                    b.Navigation("Dog");

                    b.Navigation("Jersey");

                    b.Navigation("Race");

                    b.Navigation("ResultType");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.TrackRecord", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Breed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Distance", "Distance")
                        .WithMany()
                        .HasForeignKey("DistanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.Run", "Run")
                        .WithMany()
                        .HasForeignKey("RunID");

                    b.HasOne("Hylian.RIS.API.Domain.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hylian.RIS.API.Domain.RaceTrack", "Track")
                        .WithMany("TrackRecords")
                        .HasForeignKey("TrackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed");

                    b.Navigation("Distance");

                    b.Navigation("Run");

                    b.Navigation("Sex");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Participants", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Dog", null)
                        .WithMany()
                        .HasForeignKey("DogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Participants_Dogs_DogID");

                    b.HasOne("Hylian.RIS.API.Domain.RaceEvent", null)
                        .WithMany()
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Participants_Events_EventID");
                });

            modelBuilder.Entity("TrackDistances", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Distance", null)
                        .WithMany()
                        .HasForeignKey("DistanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackDistances_Distances_DistanceID");

                    b.HasOne("Hylian.RIS.API.Domain.RaceTrack", null)
                        .WithMany()
                        .HasForeignKey("TrackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackDistances_Tracks_TrackID");
                });

            modelBuilder.Entity("TrackOrganisations", b =>
                {
                    b.HasOne("Hylian.RIS.API.Domain.Organisation", null)
                        .WithMany()
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackOrganisations_Organisations_OrganisationID");

                    b.HasOne("Hylian.RIS.API.Domain.RaceTrack", null)
                        .WithMany()
                        .HasForeignKey("TrackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackOrganisations_Tracks_TrackID");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Account", b =>
                {
                    b.Navigation("Persons");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Breed", b =>
                {
                    b.Navigation("AgeRestrictions");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Dog", b =>
                {
                    b.Navigation("Licenses");

                    b.Navigation("Runs");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Organisation", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Events");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Person", b =>
                {
                    b.Navigation("Dogs");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Race", b =>
                {
                    b.Navigation("Runs");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceClass", b =>
                {
                    b.Navigation("Licenses");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceCompetition", b =>
                {
                    b.Navigation("AgeRestrictions");

                    b.Navigation("Events");

                    b.Navigation("Jerseys");

                    b.Navigation("Licenses");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceEvent", b =>
                {
                    b.Navigation("Crew");

                    b.Navigation("Races");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.RaceTrack", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("TrackRecords");
                });

            modelBuilder.Entity("Hylian.RIS.API.Domain.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
